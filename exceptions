#!/usr/bin/env bash
# shellcheck disable=SC2154 # variables are inherrited when sourced, no need to error
# Useful variables:
# ${gameName}           Name of the game as it appears on GOG.com
# ${tmpdir}/${gameName} Where the game files got extracted, before install
# ${gameID}             Each product has an ID number, not usually visible to the end user
# ${romdir}             Folder that has rom folders for different emulators
# ${biosdir}            Folder for BIOS roms
# ${dosboxdir}          ${romdir}/pc
# ${scummvmdir}         ${romdir}/scummvm
# You can write error messages for commands that fail by ending the command like so || _error "What failed and why"

1435827232_exception() { #Ultimate DOOM, The
    sudo apt install zip
    mkdir -p "${romdir}/ports/doom" || { _error "Could not create folder ${romdir}/ports/doom"; return; }
    cp "${tmpdir}/${gameName}/DOOM.WAD" "${romdir}/ports/doom/" || { _error "Could not copy DOOM.WAD to install directory"; return; }
    cat <<'_EOF_' >>"${romdir}/ports/Ultimate Doom.sh"
#!/usr/bin/env bash
# This file is borrowed from https://raw.githubusercontent.com/crcerror/launch-doom-packs-RP/6479af76bf7909711245763a1c7e707f852d56b2/DOOM%20-%201.sh
path="/home/pi/RetroPie/roms/ports/doom"
wadfile="DOOM.WAD"
if ! [[ -e "${path}/$wadfile" ]]; then
echo "Error! ${path}/$wadfile not found!"
echo "Please resolve problem in script or install file!"
sleep 10
exit
fi
if [[ -e "${path}/savegames_${wadfile%.*}.zip" ]]; then
unzip -qq -o "${path}/savegames_${wadfile%.*}.zip" -d "$path"
fi
"/opt/retropie/supplementary/runcommand/runcommand.sh" 0 _PORT_ "doom" "${path}/$wadfile"
cd "$path" && zip -mj "savegames_${wadfile%.*}.zip" prbmsav?.dsg
_EOF_
    chmod +x "${romdir}/ports/Ultimate Doom.sh" || { _error "Could not create install script"; return; }
    if _yesno "${gameName} has been installed to ${romdir}/ports/doom.\nSelect yes to build libretro PrBoom, to use as the engine.\nSelect No to skip build."; then
        sudo "${HOME}/RetroPie-Setup/retropie_packages.sh" lr-prboom || { _error "Could not install lr-prboom"; return; }
    fi
    _msgbox "${gameName} is installed to work with PrBoom, with seperated savgame.\n\nMake sure to enable lr-prboom as your DOOM engine, in the runcommand."
}

1207658753_exception() { #Teenagent
    mv -f "${tmpdir}/${gameName}" "${scummvmdir}/${gameName}.svm" || { _error "Could not copy games to ${scummvmdir}/${gameName}.svm"; return; }
    echo "teenagent" >"${scummvmdir}/${gameName}.svm/teenagent.svm" || { _error "Could not create shortcut"; return; }
    _msgbox "${gameName} Has been installed to ${scummvmdir}\n\nYou need to open up ScummVM and add the game manually."
}

1885026907_exception() { #Escape from Monkey Island
    mv -f "${tmpdir}/${gameName}" "${romdir}/residualvm/${gameName}" || { _error "Could not copy games to ${romdir}/residualvm/\n\nCheck if ResidualVM is installed."; return; }
    (
        cd "${romdir}/residualvm/${gameName}" || { _error "Could not access ${romdir}/residualvm/${gameName}"; return; }
        curl -o "MonkeyUpdate.exe" -O "https://demos.residualvm.org/patches/MonkeyUpdate.exe"
    )
    (
        cd "${romdir}/residualvm/${gameName}/Textures" || { _error "Could not access ${gameName}/Textures"; return; }
        mv "FullMonkeyMap.imt" "FullMonkeyMap1.imt" || { _error "Could not manipulate texture data"; return; }
        cp "FullMonkeyMap1.imt" "FullMonkeyMap2.imt" || { _error "Could not manipulate texture data"; return; }
    )
    _msgbox "${gameName} Has been installed to ${romdir}/"
}

1207666473_exception() { #Wings (Emulated Amiga Edition)
    unzip "${tmpdir}/${gameName}/Wings.exe" -d "${tmpdir}/${gameName}"
    cp "${tmpdir}/${gameName}/Media GOG/Kick12.rom" "${biosdir}/kick12.rom" || { _error "Could not write to ${biosdir}"; return; }
    echo "Ripping wings disks"
    dd "if=${tmpdir}/${gameName}/Media GOG/romwings.bin" "of=${tmpdir}/${gameName}/wings-1.adf" bs=1 skip=4 count=901120
    dd "if=${tmpdir}/${gameName}/Media GOG/romwings.bin" "of=${tmpdir}/${gameName}/wings-2.adf" bs=1 skip=901124 count=901120
    cp "${tmpdir}/${gameName}"/wings-{1,2}.adf "${romdir}/amiga/" || { _error "Could not copy rom files.\n\nThis usually happens when no Amiga emulator is installed."; return; }
    _msgbox "${gameName} Has been installed to ${romdir}/amiga"
}

1207666773_exception() { #Rocket Ranger (Emulated Amiga Edition)
    unzip "${tmpdir}/${gameName}/RocketRanger.exe" -d "${tmpdir}/${gameName}"
    cp "${tmpdir}/${gameName}/Media/Kick12.rom" "${biosdir}/kick12.rom" || { _error "Could not write to ${biosdir}"; return; }
    cp "${tmpdir}/${gameName}"/Media/RocketRanger-{1,2}.adf "${romdir}/amiga/" || { _error "Could not copy rom files.\n\nThis usually happens when no Amiga emulator is installed."; return; }
    _msgbox "${gameName} Has been installed to ${romdir}/amiga"
}

1207665703_exception() { #Defender of the Crown
    unzip "${tmpdir}/${gameName}/Defender of the Crown.exe" -d "${tmpdir}/${gameName}"
    cp "${tmpdir}/${gameName}/Media/Kick12.rom" "${biosdir}/kick12.rom" || { _error "Could not write to ${biosdir}"; return; }
    cp "${tmpdir}/${gameName}"/Media/dotc-{1,2}.adf "${romdir}/amiga/" || { _error "Could not copy rom files.\n\nThis usually happens when no Amiga emulator is installed."; return; }
    _msgbox "${gameName} Has been installed to ${romdir}/amiga"
}